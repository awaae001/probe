// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.12
// source: proto/post.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Message Definitions
type Post struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                             // 帖子的唯一 ID
	AuthorId      string                 `protobuf:"bytes,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`                 // 作者的 Discord 用户 ID
	ChannelId     string                 `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`              // 帖子所在的频道 ID
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                       // 帖子标题
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`                                   // 帖子内容 (Markdown 或纯文本)
	CreatedAt     int64                  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`             // 创建时间戳 (Unix timestamp)
	Tags          []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`                                         // 标签，用于分类和搜索
	ReactionCount int32                  `protobuf:"varint,8,opt,name=reaction_count,json=reactionCount,proto3" json:"reaction_count,omitempty"` // 帖子的总反应数
	ReplyCount    int32                  `protobuf:"varint,9,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`          // 帖子的回复消息数
	ImageUrl      string                 `protobuf:"bytes,10,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`                // 帖子封面图片的 URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Post) Reset() {
	*x = Post{}
	mi := &file_proto_post_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_proto_post_proto_rawDescGZIP(), []int{0}
}

func (x *Post) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Post) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *Post) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *Post) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Post) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Post) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Post) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Post) GetReactionCount() int32 {
	if x != nil {
		return x.ReactionCount
	}
	return 0
}

func (x *Post) GetReplyCount() int32 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

func (x *Post) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type GetPostRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // 要获取的帖子的 ID
	ChannelId     *string                `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3,oneof" json:"channel_id,omitempty"` // (可选) 帖子所在的频道 ID，用于校验和路由
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPostRequest) Reset() {
	*x = GetPostRequest{}
	mi := &file_proto_post_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPostRequest) ProtoMessage() {}

func (x *GetPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPostRequest.ProtoReflect.Descriptor instead.
func (*GetPostRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_proto_rawDescGZIP(), []int{1}
}

func (x *GetPostRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetPostRequest) GetChannelId() string {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return ""
}

type QueryPostsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthorId      *string                `protobuf:"bytes,1,opt,name=author_id,json=authorId,proto3,oneof" json:"author_id,omitempty"`     // 按作者查询
	ChannelId     *string                `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3,oneof" json:"channel_id,omitempty"`  // 按频道查询
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`                                   // 按标签查询 (查询包含所有指定标签的帖子)
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`          // 分页大小
	PageNumber    int32                  `protobuf:"varint,5,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`    // 页码
	StartTime     *int64                 `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"` // 开始时间戳 (Unix timestamp)
	EndTime       *int64                 `protobuf:"varint,7,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`       // 结束时间戳 (Unix timestamp)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPostsRequest) Reset() {
	*x = QueryPostsRequest{}
	mi := &file_proto_post_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPostsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPostsRequest) ProtoMessage() {}

func (x *QueryPostsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPostsRequest.ProtoReflect.Descriptor instead.
func (*QueryPostsRequest) Descriptor() ([]byte, []int) {
	return file_proto_post_proto_rawDescGZIP(), []int{2}
}

func (x *QueryPostsRequest) GetAuthorId() string {
	if x != nil && x.AuthorId != nil {
		return *x.AuthorId
	}
	return ""
}

func (x *QueryPostsRequest) GetChannelId() string {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return ""
}

func (x *QueryPostsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *QueryPostsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryPostsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *QueryPostsRequest) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *QueryPostsRequest) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type QueryPostsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Posts         []*Post                `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`                              // 查询到的帖子列表
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 符合条件的总帖子数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryPostsResponse) Reset() {
	*x = QueryPostsResponse{}
	mi := &file_proto_post_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryPostsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPostsResponse) ProtoMessage() {}

func (x *QueryPostsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_post_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPostsResponse.ProtoReflect.Descriptor instead.
func (*QueryPostsResponse) Descriptor() ([]byte, []int) {
	return file_proto_post_proto_rawDescGZIP(), []int{3}
}

func (x *QueryPostsResponse) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *QueryPostsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_proto_post_proto protoreflect.FileDescriptor

const file_proto_post_proto_rawDesc = "" +
	"\n" +
	"\x10proto/post.proto\x12\x04post\"\x9a\x02\n" +
	"\x04Post\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\tR\bauthorId\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x03 \x01(\tR\tchannelId\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12%\n" +
	"\x0ereaction_count\x18\b \x01(\x05R\rreactionCount\x12\x1f\n" +
	"\vreply_count\x18\t \x01(\x05R\n" +
	"replyCount\x12\x1b\n" +
	"\timage_url\x18\n" +
	" \x01(\tR\bimageUrl\"S\n" +
	"\x0eGetPostRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\"\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\tH\x00R\tchannelId\x88\x01\x01B\r\n" +
	"\v_channel_id\"\xa8\x02\n" +
	"\x11QueryPostsRequest\x12 \n" +
	"\tauthor_id\x18\x01 \x01(\tH\x00R\bauthorId\x88\x01\x01\x12\"\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\tH\x01R\tchannelId\x88\x01\x01\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x12\x1f\n" +
	"\vpage_number\x18\x05 \x01(\x05R\n" +
	"pageNumber\x12\"\n" +
	"\n" +
	"start_time\x18\x06 \x01(\x03H\x02R\tstartTime\x88\x01\x01\x12\x1e\n" +
	"\bend_time\x18\a \x01(\x03H\x03R\aendTime\x88\x01\x01B\f\n" +
	"\n" +
	"_author_idB\r\n" +
	"\v_channel_idB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_time\"W\n" +
	"\x12QueryPostsResponse\x12 \n" +
	"\x05posts\x18\x01 \x03(\v2\n" +
	".post.PostR\x05posts\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount2{\n" +
	"\vPostService\x12+\n" +
	"\aGetPost\x12\x14.post.GetPostRequest\x1a\n" +
	".post.Post\x12?\n" +
	"\n" +
	"QueryPosts\x12\x17.post.QueryPostsRequest\x1a\x18.post.QueryPostsResponseB\x13Z\x11discord-bot/protob\x06proto3"

var (
	file_proto_post_proto_rawDescOnce sync.Once
	file_proto_post_proto_rawDescData []byte
)

func file_proto_post_proto_rawDescGZIP() []byte {
	file_proto_post_proto_rawDescOnce.Do(func() {
		file_proto_post_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_post_proto_rawDesc), len(file_proto_post_proto_rawDesc)))
	})
	return file_proto_post_proto_rawDescData
}

var file_proto_post_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_post_proto_goTypes = []any{
	(*Post)(nil),               // 0: post.Post
	(*GetPostRequest)(nil),     // 1: post.GetPostRequest
	(*QueryPostsRequest)(nil),  // 2: post.QueryPostsRequest
	(*QueryPostsResponse)(nil), // 3: post.QueryPostsResponse
}
var file_proto_post_proto_depIdxs = []int32{
	0, // 0: post.QueryPostsResponse.posts:type_name -> post.Post
	1, // 1: post.PostService.GetPost:input_type -> post.GetPostRequest
	2, // 2: post.PostService.QueryPosts:input_type -> post.QueryPostsRequest
	0, // 3: post.PostService.GetPost:output_type -> post.Post
	3, // 4: post.PostService.QueryPosts:output_type -> post.QueryPostsResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_post_proto_init() }
func file_proto_post_proto_init() {
	if File_proto_post_proto != nil {
		return
	}
	file_proto_post_proto_msgTypes[1].OneofWrappers = []any{}
	file_proto_post_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_post_proto_rawDesc), len(file_proto_post_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_post_proto_goTypes,
		DependencyIndexes: file_proto_post_proto_depIdxs,
		MessageInfos:      file_proto_post_proto_msgTypes,
	}.Build()
	File_proto_post_proto = out.File
	file_proto_post_proto_goTypes = nil
	file_proto_post_proto_depIdxs = nil
}
